# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net
name: 'main workflow'
env:
  PROJECT: 'sample-application/sample-application.sln'
  CONFIGURATION: 'Release'
  DESTINATION_FOLDER: '~/release'
  ARTIFACT_FILE_NAME: 'package.tar'
  ARTIFACT_NAME: 'sampleapplication-${{ github.run_id }}'
on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        options:
        - production
        - sandbox
        required: false
        default: sandbox
        
  pull_request_target:
    branches: 'main'
  push:
    branches: ['main', 'feature/**', 'release/**']

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
            
      - name: Restore dependencies
        run: dotnet restore ${{ env.PROJECT }}
        
      - name: Build
        run: dotnet build ${{ env.PROJECT }} --no-restore  --configuration ${{ env.CONFIGURATION }}
       
      - name: Publish artifacts
        run: dotnet publish ${{ env.PROJECT }} --configuration ${{ env.CONFIGURATION }} --output ${{ env.DESTINATION_FOLDER }}
        
      - name: Compress artifacts
        run: |
          tar -cvf ~/${{ env.ARTIFACT_FILE_NAME }} ${{ env.DESTINATION_FOLDER }}
          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          # Artifact name
          name: ${{ env.ARTIFACT_NAME }} # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: ~/${{ env.ARTIFACT_FILE_NAME }}
          # The desired behavior if no files are found using the provided path.
          if-no-files-found: error
          retention-days: 1 # optional
          
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
          
      - name: Run Unit Tests
        run: dotnet test ${{ env.PROJECT }} --configuration ${{ env.CONFIGURATION }}
  
  publish-prod:
    if: ${{ github.event_name == 'workflow_dispatch' && inputs.environment == 'production' }}
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.2
        with:
          # Artifact name
          name: ${{ env.ARTIFACT_NAME }} 
          path: './'
          
      - name: Decompress Artifacts
        run: |
          mkdir ${{ env.DESTINATION_FOLDER }}
          tar -xvf ./${{ env.ARTIFACT_FILE_NAME }} -C ${{ env.DESTINATION_FOLDER }}
          ls ${{ env.DESTINATION_FOLDER }}
          echo "debug" >> ${{ env.DESTINATION_FOLDER }}/file.txt
          
      - name: 'Publish'
        run: |
          echo deploy to production
          cat ${{ env.DESTINATION_FOLDER }}/file.txt
          
  publish-sandbox:
    if: ${{ github.event_name == 'workflow_dispatch' && inputs.environment == 'sandbox' }}
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.2
        with:
          # Artifact name
          name: ${{ env.ARTIFACT_NAME }} 
          path: './'
          
      - name: Decompress Artifacts
        run: |
          mkdir ${{ env.DESTINATION_FOLDER }}
          tar -xvf ./${{ env.ARTIFACT_FILE_NAME }} -C ${{ env.DESTINATION_FOLDER }}
          ls ${{ env.DESTINATION_FOLDER }}
          echo "debug" >> ${{ env.DESTINATION_FOLDER }}/file.txt
          
      - name: 'Publish'
        run: |
          echo deploy to sandbox env
          cat ${{ env.DESTINATION_FOLDER }}/file.txt
